/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.LeetCodeChallenge;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LeetCodeChallengeControllerApi
 */
@Disabled
public class LeetCodeChallengeControllerApiTest {

    private final LeetCodeChallengeControllerApi api = new LeetCodeChallengeControllerApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createChallengeTest() throws ApiException {
        LeetCodeChallenge leetCodeChallenge = null;
        LeetCodeChallenge response = api.createChallenge(leetCodeChallenge);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAllChallengesTest() throws ApiException {
        api.deleteAllChallenges();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteChallengeByIdTest() throws ApiException {
        Long id = null;
        api.deleteChallengeById(id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllChallengesTest() throws ApiException {
        List<LeetCodeChallenge> response = api.getAllChallenges();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChallengeByIdTest() throws ApiException {
        Long id = null;
        LeetCodeChallenge response = api.getChallengeById(id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void submitSolutionTest() throws ApiException {
        Long challengeId = null;
        String solution = null;
        String response = api.submitSolution(challengeId, solution);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateChallengeTest() throws ApiException {
        Long id = null;
        LeetCodeChallenge leetCodeChallenge = null;
        LeetCodeChallenge response = api.updateChallenge(id, leetCodeChallenge);
        // TODO: test validations
    }

}
